1. put package.json file in the main folder
2. nmp install
3. create a .babelrc file with content {"presets":["es2015"]}
	echo {"presets":["es2015"]} >>.babelrc
4. create a source and compiled path and edit name in json file
5. nmp run build to compile
{// u can create multiple .js files tht will be minified by webpack in js folder so 1.js 2.js and main.js}
6. script.js must have  <-- name given in entry point in webpack.config
	require(./1.js);
	require(./2.js);
7. create a webpack.config.json file
{// context __dirname is the main directory our index.php will be in ,deployment main..then devtool checks if we are in debug mode or production mode which we specify when using webpack ,and if 
debug mode then no minification else minify the scripts.. entry point is where to start require .. output have path and name of output file..}
8. just run the cmd 
	NODE_ENV=production webpack
9. include the script.min.js to main.php
10.  terminal $npm run dev
to run site on server(8080 port, in package son we can manage exact location of where the main site is by editing the command
	:webpack-dev-server —-content-base ./
	u can use anything in ./ place, 
)

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SOME MORE FEATURES

WEBPACK.
	npm install jquery
		now in 1.js
		var $=require('jquery');
	and now jquery will be only locally available


IN loaders in webpack we have already mentioned to use babel to transpile js so no need for tht, we now only run webpack and it does it all

The command: AMAN$ webpack —watch
	this is to keep compiling while on the go.

the command “babel src1 -d js” in package.json in script (command in scripts can be used as $npm run scriptname)
now “babel src1 -d js” takes files from transpile the ecma6 to ecma5



-------------------------webpack.config.js-------------------------
var debug = process.env.NODE_ENV !== "production";
var webpack = require('webpack');

module.exports = {
  context: __dirname,
  devtool: debug ? "inline-sourcemap" : null,
  entry: "./js/script.js",
  module: {
    loaders: [
      {
        test: /\.js?$/,
        exclude: /(node_modules|bower_components)/,
        loader: 'babel-loader',
        query: {
          presets: ['react', 'es2015', 'stage-0'],
          plugins: ['react-html-attrs', 'transform-decorators-legacy', 'transform-class-properties'],
        }
      }
    ]
  },
  output: {
    path: __dirname + "/js",
    filename: "script.min.js"
  },
  plugins: debug ? [] : [
    new webpack.optimize.DedupePlugin(),
    new webpack.optimize.OccurenceOrderPlugin(),
    new webpack.optimize.UglifyJsPlugin({ mangle: false, sourcemap: false }),
  ],
};



-------------------------package.json-------------------------

{
  "name": "SAPRA",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "build": "babel src -d allofcomplie”,
    "dev"  : "webpack-dev-server --content-base ./ --inline --hot"
  },
  "scrips": {
    "build": "babel --presets es2015 src -d allofcomplie"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "babel-core": "^6.17.0",
    "babel-loader": "^6.2.0",
    "babel-plugin-add-module-exports": "^0.1.2",
    "babel-plugin-react-html-attrs": "^2.0.0",
    "babel-plugin-transform-class-properties": "^6.3.13",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-preset-react": "^6.3.13",
    "babel-preset-stage-0": "^6.3.13",
    "react": "^0.14.6",
    "react-dom": "^0.14.6",
    "webpack": "^1.14.0",
    "webpack-dev-server": "^1.14.1",
    "babel-cli": "^6.18.0",
    "babel-preset-es2015": "^6.18.0",
    "babel-preset-latest": "^6.16.0",
    "webpack-dev-server": "^1.16.2"
  }
}

-------------------------index.php-------------------------

<html>
<title>
<script src="script.min.js" />




